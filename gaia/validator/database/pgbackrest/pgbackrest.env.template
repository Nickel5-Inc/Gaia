# Gaia Validator pgBackRest Configuration
# Copy this file to /etc/gaia/pgbackrest.env and customize for your environment

# =============================================================================
# Storage Backend Configuration
# =============================================================================
# Choose storage backend: "azure" or "r2" (R2 recommended for better performance/cost)
STORAGE_BACKEND=r2

# =============================================================================
# Azure Storage Configuration (Legacy)
# =============================================================================
AZURE_STORAGE_ACCOUNT=your_storage_account_name
AZURE_STORAGE_KEY=your_storage_account_key
AZURE_CONTAINER=gaia-db-backups

# =============================================================================
# Cloudflare R2 Storage Configuration (RECOMMENDED)
# =============================================================================
# R2 provides better performance and significantly lower costs
# Create R2 bucket and API tokens at: https://dash.cloudflare.com/r2

# R2 Endpoint URL (replace YOUR_ACCOUNT_ID with your actual Cloudflare account ID)
R2_ENDPOINT_URL=https://YOUR_ACCOUNT_ID.r2.cloudflarestorage.com

# R2 API Credentials (create at Cloudflare dashboard > R2 > Manage R2 API tokens)
R2_ACCESS_KEY_ID=your_r2_access_key_id
R2_SECRET_ACCESS_KEY=your_r2_secret_access_key

# R2 Bucket name for pgBackRest backups (will be created automatically)
R2_BUCKET_NAME=gaia-pgbackrest-backups

# R2 Region (usually "auto" for Cloudflare R2)
R2_REGION_NAME=auto

# =============================================================================
# PostgreSQL Configuration
# =============================================================================
PGDATA=/var/lib/postgresql/data
PGPORT=5432
PGUSER=postgres
PGDATABASE=gaia_db

# =============================================================================
# Network Configuration
# =============================================================================
# IP address of the primary validator node
PRIMARY_HOST=primary.validator.ip

# Comma-separated list of replica validator IPs (optional)
REPLICA_HOSTS=replica1.validator.ip,replica2.validator.ip

# =============================================================================
# pgBackRest Configuration
# =============================================================================
STANZA_NAME=gaia
RETENTION_FULL=7
RETENTION_DIFF=2
PROCESS_MAX=4
COMPRESS_LEVEL=3

# =============================================================================
# Backup Scheduling Configuration
# =============================================================================
# Full backup daily at 00:00 UTC (cron format: minute hour day month weekday)
FULL_BACKUP_SCHEDULE="0 0 * * *"

# Differential backup hourly at :30 minutes (captures WAL + incremental changes)
DIFF_BACKUP_SCHEDULE="30 * * * *"

# Optional: Incremental backups every 15 minutes (for high-frequency environments)
# INCR_BACKUP_SCHEDULE="*/15 * * * *"

# Backup validation schedule (weekly full validation on Sundays at 02:00 UTC)
BACKUP_VALIDATION_SCHEDULE="0 2 * * 0"

# =============================================================================
# WAL Archiving Configuration
# =============================================================================
# WAL archive timeout (how long to wait before forcing WAL file archival)
ARCHIVE_TIMEOUT=60

# WAL retention (how much WAL to keep locally)
WAL_KEEP_SIZE=2GB

# Maximum WAL senders (for streaming replication)
MAX_WAL_SENDERS=10

# =============================================================================
# Logging Configuration
# =============================================================================
LOG_LEVEL_CONSOLE=info
LOG_LEVEL_FILE=debug
LOG_PATH=/var/log/pgbackrest

# Enable detailed backup logging
LOG_BACKUP_DETAIL=true

# Log retention (days)
LOG_RETENTION_DAYS=30

# =============================================================================
# Performance Tuning
# =============================================================================
# Adjust these based on your server resources
CHECKPOINT_TIMEOUT=15min
MAX_WAL_SIZE=4GB
SHARED_BUFFERS=256MB
EFFECTIVE_CACHE_SIZE=1GB

# Parallel backup/restore workers (adjust based on CPU cores)
BACKUP_PROCESS_MAX=4
RESTORE_PROCESS_MAX=4

# Database connection settings for backups
DB_TIMEOUT=1800
PROTOCOL_TIMEOUT=1800

# =============================================================================
# Security Configuration
# =============================================================================
# SSL mode for PostgreSQL connections (disable, allow, prefer, require)
SSLMODE=prefer

# Lock directory for pgBackRest operations
LOCK_PATH=/var/lock/pgbackrest

# Socket path for pgBackRest operations
SOCKET_PATH=/tmp/pgbackrest

# =============================================================================
# Advanced Configuration (usually don't need to change)
# =============================================================================
MAX_CONNECTIONS=200

# Buffer size for backup operations (in bytes)
BUFFER_SIZE=1048576

# Network compression for remote operations
COMPRESS_TYPE=gz
COMPRESS_LEVEL_NETWORK=3

# Delta restore configuration
DELTA=true

# Force option for operations
FORCE=false

# Resume incomplete operations
RESUME=true

# =============================================================================
# Monitoring and Alerting
# =============================================================================
# Enable backup monitoring
MONITORING_ENABLED=true

# Backup status check interval (minutes)
STATUS_CHECK_INTERVAL=30

# Alert thresholds
BACKUP_AGE_WARNING_HOURS=26    # Warn if last backup is >26 hours old
BACKUP_AGE_CRITICAL_HOURS=50   # Critical if last backup is >50 hours old

# Archive lag warning threshold (seconds)
ARCHIVE_LAG_WARNING_SECONDS=300

# =============================================================================
# Node Role Configuration
# =============================================================================
# Set to "primary" for the main validator, "replica" for backup validators
NODE_ROLE=primary

# Enable standby mode for replica nodes
STANDBY_MODE=false

# Hot standby configuration for replicas
HOT_STANDBY=true

# Recovery configuration
RECOVERY_CONF_TEMPLATE=/etc/postgresql/recovery.conf.template 