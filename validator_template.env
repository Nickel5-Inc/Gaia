# Gaia Validator Configuration Template
# Rename this file to .env and fill in your specific values.

# --- Database Configuration ---
DB_USER=postgres
DB_PASSWORD=<YOUR_DB_PASSWORD> # Replace with your actual database password - default is configured to 'postgres'
DB_HOST=localhost
DB_PORT=5432
DB_NAME=validator_db
DB_TARGET=validator
DB_CONNECTION_TYPE=socket
ALEMBIC_AUTO_UPGRADE=True

# --- Application Environment ---
# Set to 'prod' for production or 'dev' for development (enables more verbose logging)
ENV=prod

# --- Subtensor/Blockchain Configuration ---
WALLET_NAME=default       # Your Bittensor wallet name
HOTKEY_NAME=default       # Your validator's hotkey name
NETUID=237                # Network UID (e.g., 237 for testnet, 57 for mainnet)
SUBTENSOR_NETWORK=test    # Bittensor network ('test' or 'finney')
SUBTENSOR_ADDRESS=wss://test.finney.opentensor.ai:443/ # Subtensor chain endpoint

# --- NASA Earthdata Credentials (Sensitive - DO NOT COMMIT ACTUAL VALUES TO PUBLIC REPOS) ---
# These are required for downloading data from NASA.
# Create an account at https://urs.earthdata.nasa.gov/
# Accept EULAs for: GESDISC Test Data Archive, OB.DAAC Data Access, Sentinel EULA
EARTHDATA_USERNAME=<YOUR_EARTHDATA_USERNAME>
EARTHDATA_PASSWORD=<YOUR_EARTHDATA_PASSWORD>
EARTHDATA_API_KEY=<YOUR_EARTHDATA_API_KEY>  # This refers to your Earthdata login credentials used by the application.

# --- Miner Score Sender (Optional) ---
# Set to "true" to enable sending miner scores to an external API (if applicable)
SCORE_SENDER_ON=False

# =============================================================================
# --- Database Synchronization Configuration ---
# Choose ONE method: Legacy Azure Backup OR pgBackRest (Recommended)
# =============================================================================

# --- Storage Backend Selection ---
# Choose storage backend: "azure", "r2", or "auto" (tries R2 first, then Azure)
STORAGE_BACKEND=auto

# --- Legacy Database Synchronization System (Optional, being phased out) ---
# Set this to "true" ONLY if this validator is the designated source for DB backups. (You're not)
# For replica validators that will restore from Azure, keep this as "False" or omit.
# IS_SOURCE_VALIDATOR_FOR_DB_SYNC=False # Example for a replica

# Interval in hours for backup (on source) or restore check (on replicas)
DB_SYNC_INTERVAL_HOURS=1

# --- Azure Authentication for Legacy DB Sync (Choose ONE method and fill details) ---
# The database user (DB_USER/DB_PASS above) will be used for pg_dump/pg_restore.

# Method 1: SAS Token (Recommended)
# The Blob service endpoint for your storage account.
AZURE_STORAGE_ACCOUNT_URL="https://devbettensorstore.blob.core.windows.net"
# The SAS token string (including the leading '?' if it has one).
# Ensure this token grants Read/List for replicas; Read/Write/List/Delete for the source,
# to the specified AZURE_BLOB_CONTAINER_NAME_DB_SYNC.
# If you need an access token, please reach out to the dev team with a signed message proving ownership of a validator key with minimum 10K alpha stake
AZURE_STORAGE_SAS_TOKEN=<YOUR_AZURE_STORAGE_SAS_TOKEN>

# Method 2: Connection String (Simpler, but generally less secure than SAS Token)
# If using SAS Token (Method 1), leave this commented out or blank.
# AZURE_STORAGE_CONNECTION_STRING=<YOUR_AZURE_STORAGE_CONNECTION_STRING>

# Name of the Azure Blob container for storing database dumps.
AZURE_BLOB_CONTAINER_NAME_DB_SYNC=data/gaia

# --- Cloudflare R2 Storage Configuration (RECOMMENDED - New Method) ---
# R2 provides better performance and lower costs compared to Azure
# Create R2 bucket and API tokens at: https://dash.cloudflare.com/r2

# R2 Endpoint URL (replace YOUR_ACCOUNT_ID with your actual Cloudflare account ID)
R2_ENDPOINT_URL=https://YOUR_ACCOUNT_ID.r2.cloudflarestorage.com

# R2 API Credentials (create at Cloudflare dashboard > R2 > Manage R2 API tokens)
R2_ACCESS_KEY_ID=<YOUR_R2_ACCESS_KEY_ID>
R2_SECRET_ACCESS_KEY=<YOUR_R2_SECRET_ACCESS_KEY>

# R2 Bucket name for database sync (will be created automatically if it doesn't exist)
R2_BUCKET_NAME=validator-db-sync

# R2 Region (usually "auto" for Cloudflare R2)
R2_REGION_NAME=auto

# --- Local Directories for Legacy DB Sync Operations ---
# Local temporary directory on the SOURCE validator for pg_dump before Azure upload.
DB_SYNC_BACKUP_DIR=/tmp/db_backups_gaia
# Local temporary directory on REPLICA validators for downloading dumps before pg_restore.
DB_SYNC_RESTORE_DIR=/tmp/db_restores_gaia

# --- Backup Retention (for Source Validator) ---
# Number of recent backups to keep in Azure. Older ones are pruned by the source.
DB_SYNC_MAX_AZURE_BACKUPS=5

# --- Weather Task Miner Inference Service Configuration (Optional) ---
# If the validator is involved in setting up or providing template configurations
# for the miner's remote inference service (e.g., a RunPod serverless worker),
# these variables define the R2 storage and access for that service.
# The inference service itself will read these from its environment.

# R2 Bucket for the Miner Inference Service (inputs/outputs)
# MINER_INF_SVC_R2_BUCKET_NAME=<YOUR_MINER_INF_SVC_R2_BUCKET_NAME>

# R2 Endpoint URL for the Miner Inference Service
# MINER_INF_SVC_R2_ENDPOINT_URL=https://<ACCOUNT_ID>.r2.cloudflarestorage.com

# R2 Access Key ID for the Miner Inference Service
# MINER_INF_SVC_R2_ACCESS_KEY_ID=<YOUR_MINER_INF_SVC_R2_ACCESS_KEY_ID>

# R2 Secret Access Key for the Miner Inference Service
# MINER_INF_SVC_R2_SECRET_ACCESS_KEY=<YOUR_MINER_INF_SVC_R2_SECRET_ACCESS_KEY>

# API Key for the Miner Inference Service (if its runpodctl or API is secured)
# MINER_INF_SVC_API_KEY=<YOUR_MINER_INF_SVC_API_KEY>

# Log Level for the Miner Inference Service
# MINER_INF_SVC_LOG_LEVEL=INFO # (DEBUG, INFO, WARNING, ERROR, CRITICAL)

# =============================================================================
# --- pgBackRest Database Synchronization (RECOMMENDED - New Method) ---
# =============================================================================
# pgBackRest provides real-time WAL-based database synchronization with point-in-time recovery
# To use pgBackRest, also copy the config template: cp gaia/validator/database/pgbackrest/pgbackrest.env.template /etc/gaia/pgbackrest.env
# Then run the setup scripts from gaia/validator/database/pgbackrest/

# --- Azure Storage Configuration for pgBackRest ---
PGBACKREST_AZURE_STORAGE_ACCOUNT=<YOUR_STORAGE_ACCOUNT_NAME>
PGBACKREST_AZURE_STORAGE_KEY=<YOUR_STORAGE_ACCOUNT_KEY>
PGBACKREST_AZURE_CONTAINER=gaia-db-backups

# --- PostgreSQL Configuration for pgBackRest ---
PGBACKREST_PGDATA=/var/lib/postgresql/data
PGBACKREST_PGPORT=5432
PGBACKREST_PGUSER=postgres
PGBACKREST_PGDATABASE=gaia_db

# --- Network Configuration for pgBackRest ---
# IP address of the primary validator node (for replica nodes)
PGBACKREST_PRIMARY_HOST=<PRIMARY_VALIDATOR_IP>
# Comma-separated list of replica validator IPs (optional, for primary node)
PGBACKREST_REPLICA_HOSTS=<REPLICA1_IP>,<REPLICA2_IP>

# --- pgBackRest Configuration ---
PGBACKREST_STANZA_NAME=gaia
PGBACKREST_RETENTION_FULL=7
PGBACKREST_RETENTION_DIFF=2
PGBACKREST_PROCESS_MAX=4
PGBACKREST_COMPRESS_LEVEL=3

# --- pgBackRest Backup Scheduling ---
# Full backup daily at 00:00 UTC (cron format: minute hour day month weekday)
PGBACKREST_FULL_BACKUP_SCHEDULE="0 0 * * *"
# Differential backup hourly at :30 minutes (for WAL and incremental data)
PGBACKREST_DIFF_BACKUP_SCHEDULE="30 * * * *"
# WAL archive timeout (continuous archiving)
PGBACKREST_ARCHIVE_TIMEOUT=60

# --- pgBackRest Logging Configuration ---
PGBACKREST_LOG_LEVEL_CONSOLE=info
PGBACKREST_LOG_LEVEL_FILE=debug
PGBACKREST_LOG_PATH=/var/log/pgbackrest

# --- PostgreSQL Performance Tuning for pgBackRest ---
# Adjust these based on your server resources
PGBACKREST_CHECKPOINT_TIMEOUT=15min
PGBACKREST_MAX_WAL_SIZE=4GB
PGBACKREST_SHARED_BUFFERS=256MB
PGBACKREST_EFFECTIVE_CACHE_SIZE=1GB

# --- pgBackRest Security Configuration ---
# SSL mode for PostgreSQL connections (disable, allow, prefer, require)
PGBACKREST_SSLMODE=prefer

# --- pgBackRest Advanced Configuration (usually don't need to change) ---
PGBACKREST_WAL_KEEP_SIZE=2GB
PGBACKREST_MAX_WAL_SENDERS=10
PGBACKREST_MAX_CONNECTIONS=200