"""optimize_geomagnetic_predictions_performance

Revision ID: dc4f1a1ad6db
Revises: d14c8157766a
Create Date: 2025-06-30 18:32:43.143330

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "dc4f1a1ad6db"
down_revision: Union[str, None] = "d14c8157766a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("geomagnetic_history", schema=None) as batch_op:
        batch_op.create_index(
            "idx_gh_miner_hotkey_scored_at",
            ["miner_hotkey", sa.literal_column("scored_at DESC")],
            unique=False,
        )
        batch_op.create_index(
            "idx_gh_query_time_miner_uid", ["query_time", "miner_uid"], unique=False
        )

    with op.batch_alter_table("geomagnetic_predictions", schema=None) as batch_op:
        batch_op.create_index(
            "idx_gp_miner_uid_query_time",
            ["miner_uid", sa.literal_column("query_time DESC")],
            unique=False,
        )
        batch_op.create_index(
            "idx_gp_pending_tasks",
            [sa.literal_column("query_time DESC")],
            unique=False,
            postgresql_where=sa.text("status = 'pending'"),
        )
        batch_op.create_index(
            "idx_gp_query_time_status",
            [sa.literal_column("query_time DESC"), "status"],
            unique=False,
        )
        batch_op.create_index(
            "idx_gp_status_query_time",
            ["status", sa.literal_column("query_time DESC")],
            unique=False,
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("geomagnetic_predictions", schema=None) as batch_op:
        batch_op.drop_index("idx_gp_status_query_time")
        batch_op.drop_index("idx_gp_query_time_status")
        batch_op.drop_index(
            "idx_gp_pending_tasks", postgresql_where=sa.text("status = 'pending'")
        )
        batch_op.drop_index("idx_gp_miner_uid_query_time")

    with op.batch_alter_table("geomagnetic_history", schema=None) as batch_op:
        batch_op.drop_index("idx_gh_query_time_miner_uid")
        batch_op.drop_index("idx_gh_miner_hotkey_scored_at")

    # ### end Alembic commands ###
