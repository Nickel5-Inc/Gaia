"""Add unique constraint to soil_moisture_history

Revision ID: 60f644a55d7e
Revises: 9184456655c8
Create Date: 2025-06-24 16:58:29.412205

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '60f644a55d7e'
down_revision: Union[str, None] = '9184456655c8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('geomagnetic_predictions', schema=None) as batch_op:
        batch_op.alter_column('retry_count',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)

    with op.batch_alter_table('soil_moisture_history', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_smh_region_miner_target_time', ['region_id', 'miner_uid', 'target_time'])

    with op.batch_alter_table('soil_moisture_predictions', schema=None) as batch_op:
        batch_op.drop_column('last_error')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('soil_moisture_predictions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_error', sa.TEXT(), autoincrement=False, nullable=True))

    with op.batch_alter_table('soil_moisture_history', schema=None) as batch_op:
        batch_op.drop_constraint('uq_smh_region_miner_target_time', type_='unique')

    with op.batch_alter_table('geomagnetic_predictions', schema=None) as batch_op:
        batch_op.alter_column('retry_count',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)

    # ### end Alembic commands ###
