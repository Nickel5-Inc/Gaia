"""Remove id and validator_hotkey from miner_performance_stats and make miner_uid primary key

Revision ID: 546e51abd7f7
Revises: 8d832ba6c04d
Create Date: 2025-07-23 17:09:13.241271

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '546e51abd7f7'
down_revision: Union[str, None] = '8d832ba6c04d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('miner_performance_stats', schema=None) as batch_op:
        batch_op.alter_column('miner_uid',
               existing_type=sa.TEXT(),
               comment="Miner's UID - Primary Key",
               existing_comment="Miner's UID",
               existing_nullable=False)
        batch_op.alter_column('period_start',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Start of the performance period - Part of Primary Key',
               existing_comment='Start of the performance period',
               existing_nullable=False)
        batch_op.alter_column('period_end',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='End of the performance period - Part of Primary Key',
               existing_comment='End of the performance period',
               existing_nullable=False)
        batch_op.alter_column('period_type',
               existing_type=sa.VARCHAR(length=20),
               comment='Type of period: daily, weekly, monthly, all_time - Part of Primary Key',
               existing_comment='Type of period: daily, weekly, monthly, all_time',
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('idx_mps_miner_uid'))
        batch_op.drop_index(batch_op.f('idx_mps_validator_hotkey'))
        batch_op.drop_constraint(batch_op.f('uq_mps_miner_period'), type_='unique')
        batch_op.drop_column('id')
        batch_op.drop_column('validator_hotkey')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('miner_performance_stats', schema=None) as batch_op:
        batch_op.add_column(sa.Column('validator_hotkey', sa.TEXT(), autoincrement=False, nullable=True, comment='Which validator calculated these stats'))
        batch_op.add_column(sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
        batch_op.create_unique_constraint(batch_op.f('uq_mps_miner_period'), ['miner_uid', 'period_start', 'period_end', 'period_type'])
        batch_op.create_index(batch_op.f('idx_mps_validator_hotkey'), ['validator_hotkey', sa.literal_column('period_start DESC')], unique=False)
        batch_op.create_index(batch_op.f('idx_mps_miner_uid'), ['miner_uid'], unique=False)
        batch_op.alter_column('period_type',
               existing_type=sa.VARCHAR(length=20),
               comment='Type of period: daily, weekly, monthly, all_time',
               existing_comment='Type of period: daily, weekly, monthly, all_time - Part of Primary Key',
               existing_nullable=False)
        batch_op.alter_column('period_end',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='End of the performance period',
               existing_comment='End of the performance period - Part of Primary Key',
               existing_nullable=False)
        batch_op.alter_column('period_start',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Start of the performance period',
               existing_comment='Start of the performance period - Part of Primary Key',
               existing_nullable=False)
        batch_op.alter_column('miner_uid',
               existing_type=sa.TEXT(),
               comment="Miner's UID",
               existing_comment="Miner's UID - Primary Key",
               existing_nullable=False)

    # ### end Alembic commands ###
