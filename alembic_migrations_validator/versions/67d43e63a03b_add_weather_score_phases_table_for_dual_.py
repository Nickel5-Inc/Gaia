"""Add weather_score_phases table for dual score tracking

Revision ID: 67d43e63a03b
Revises: 546e51abd7f7
Create Date: 2025-07-23 18:33:49.139149

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '67d43e63a03b'
down_revision: Union[str, None] = '546e51abd7f7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('weather_score_phases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Serial ID for the score phase entry'),
    sa.Column('run_id', sa.Integer(), nullable=False, comment='ID of the forecast run being scored'),
    sa.Column('miner_uid', sa.Integer(), nullable=False, comment="Miner's UID"),
    sa.Column('miner_hotkey', sa.VARCHAR(length=255), nullable=False, comment="Miner's hotkey"),
    sa.Column('phase_type', sa.VARCHAR(length=20), nullable=False, comment="Scoring phase: 'initial' (Day-1 only) or 'final' (Day-1 + ERA5)"),
    sa.Column('score_value', sa.Float(), nullable=True, comment='Combined score for this phase'),
    sa.Column('calculation_time', postgresql.TIMESTAMP(timezone=True), nullable=False, comment='When this phase score was calculated'),
    sa.Column('component_scores', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Breakdown of score components (day1_score, era5_score, weights used)'),
    sa.Column('data_availability', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='What data was available when scoring (for debugging/transparency)'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Timestamp of score creation'),
    sa.CheckConstraint("phase_type IN ('initial', 'final')", name='chk_wsp_phase_type'),
    sa.ForeignKeyConstraint(['run_id'], ['weather_forecast_runs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('run_id', 'miner_uid', 'phase_type', name='uq_wsp_run_miner_phase'),
    comment='Tracks weather scoring phases - initial scores (Day-1 only) vs final scores (Day-1 + ERA5) for dual score tracking.'
    )
    with op.batch_alter_table('weather_score_phases', schema=None) as batch_op:
        batch_op.create_index('idx_wsp_calculation_time', ['calculation_time'], unique=False)
        batch_op.create_index('idx_wsp_miner_hotkey', ['miner_hotkey'], unique=False)
        batch_op.create_index('idx_wsp_miner_phase_time', ['miner_uid', 'phase_type', sa.literal_column('calculation_time DESC')], unique=False)
        batch_op.create_index('idx_wsp_miner_uid', ['miner_uid'], unique=False)
        batch_op.create_index('idx_wsp_phase_type', ['phase_type'], unique=False)
        batch_op.create_index('idx_wsp_run_id', ['run_id'], unique=False)
        batch_op.create_index('idx_wsp_score_value', [sa.literal_column('score_value DESC')], unique=False, postgresql_where=sa.text('score_value IS NOT NULL'))

    with op.batch_alter_table('miner_performance_stats', schema=None) as batch_op:
        batch_op.alter_column('miner_uid',
               existing_type=sa.TEXT(),
               comment="Miner's UID",
               existing_comment="Miner's UID - Primary Key",
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('miner_performance_stats', schema=None) as batch_op:
        batch_op.alter_column('miner_uid',
               existing_type=sa.TEXT(),
               comment="Miner's UID - Primary Key",
               existing_comment="Miner's UID",
               existing_nullable=False)

    with op.batch_alter_table('weather_score_phases', schema=None) as batch_op:
        batch_op.drop_index('idx_wsp_score_value', postgresql_where=sa.text('score_value IS NOT NULL'))
        batch_op.drop_index('idx_wsp_run_id')
        batch_op.drop_index('idx_wsp_phase_type')
        batch_op.drop_index('idx_wsp_miner_uid')
        batch_op.drop_index('idx_wsp_miner_phase_time')
        batch_op.drop_index('idx_wsp_miner_hotkey')
        batch_op.drop_index('idx_wsp_calculation_time')

    op.drop_table('weather_score_phases')
    # ### end Alembic commands ###
